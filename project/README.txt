Для хранения данных используется HashMap, где в качестве ключа используется строка,
а в качестве значения объект Record, содежращий строку (данные) и ttl в формате ttl + epoch milliseconds.
Для хранилища Storage реализована вся требуемая функциональность. dump файл сохраняется в формате
.txt и отправляется клиенту при выполнении запроса. Выполнение load без предварительного
дампа приведет к обрабатываемой ошибке. Состояние хранилища при выполнении load загружается
из файла, находящегося на локальной машине (поле file класса Storage).

Взаимодействие с сервером происходит по протоколу HTTP. Формат запросов следующий:
Операция чтения (get): 
GET /get/{"key"}

Операция записи (set): 
POST /set/{"key"}
Данные и ttl передаются в теле запроса в формате JSON

Операция удаления (remove):
DELETE /{"key"}

Операция сохранения текущего состояния (dump):
GET /dump

Операция загрузки состояния хранилища (load):
POST /load

Классы сервиса (кроме HttpService) покрыты unit-тестами JUnit.

Файлы сервиса находятся в папке service.


Драйвер для сервиса расположен в папке driver. В классе Main содержится код с демонстрацией работы драйвера.
Вызов методов драйвера отправляет HTTP запросы сервису и возвращает его ответ в консоль. Метод dump вовзращает
содержимое файла в консоль.


Драйвер запускается отдельно от сервера как другое приложение. Все зависимости указаны в pom.xml.